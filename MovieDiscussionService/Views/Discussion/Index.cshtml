@model IEnumerable<Common.DiscussionEntity>
@{
    ViewBag.Title = "Discussions";
    var currentUserEmail = Session["email"]?.ToString()?.ToLowerInvariant();
}

<h2>Discussions</h2>

<p>
    @Html.ActionLink("Create new discussion", "Create", "Discussion")
</p>

<div class="story-container">
    @foreach (var d in Model)
    {
        <div class="story-card">
            <img src="@d.PosterUrl" alt="Poster for @d.MovieTitle" class="poster-img" />
            <div class="story-content">
                <h3>@d.MovieTitle (@d.Year)</h3>
                <p><strong>Genre:</strong> @d.Genre</p>
                <p><strong>IMDB:</strong> @d.ImdbRating</p>
                <p><strong>Duration:</strong> @d.DurationMin min</p>
                <p><strong>Synopsis:</strong> @d.Synopsis</p>
                <p><strong>Reactions:</strong> 👍 @d.Positive / 👎 @d.Negative</p>
                <p><strong>Created:</strong> @d.CreatedUtc.ToString("yyyy-MM-dd HH:mm")</p>
                <p><strong>By:</strong> @d.CreatorEmail</p>

                @if (d.CreatorEmail?.ToLowerInvariant() == currentUserEmail)
                {
                    <div class="story-actions">
                        @Html.ActionLink("Edit", "Edit", "Discussion", new { id = d.RowKey }, new { @class = "btn btn-sm btn-primary" })
                        @Html.Raw(" | ")
                        @Html.ActionLink("Delete", "Delete", "Discussion", new { id = d.RowKey }, new { @class = "btn btn-sm btn-danger" })
                    </div>
                }

                <div class="story-actions">
                    <button class="btn btn-sm btn-secondary" onclick="window.location.href='@Url.Action("Details", "Discussion", new { id = d.RowKey })'">💬 Comment</button>
                    <p><strong>Comments:</strong> @ViewBag.CommentCount[d.RowKey]</p>
                </div>

                <!-- Ako trenutni korisnik nije kreator diskusije, prikazujemo dugmadi za glasanje -->
                @if (!ViewBag.IsCreatorMap[d.RowKey])
                {
                    <div class="reaction-buttons">
                        <form method="post" action="@Url.Action("RateFilm", "Discussion", new { id = d.RowKey, isLike = true })">
                            <button type="submit" class="btn btn-sm btn-success">👍 @d.Positive</button>
                        </form>

                        <form method="post" action="@Url.Action("RateFilm", "Discussion", new { id = d.RowKey, isLike = false })">
                            <button type="submit" class="btn btn-sm btn-danger">👎 @d.Negative</button>
                        </form>
                    </div>
                   
                }
                else
                {
                    <p><strong>You created this discussion, voting is disabled for you.</strong></p>
                }

                <div class="story-actions">
                    <!-- Prikaz broja pratilaca -->
                    <p><strong>Followers:</strong> @ViewBag.FollowerCountMap[d.RowKey]</p>

                    <!-- Prikaz statusa praćenja -->
                    @if (ViewBag.IsFollowingMap[d.RowKey])
                    {
                        <form method="post" action="@Url.Action("Unfollow", "Discussion", new { id = d.RowKey })">
                            <button class="btn btn-sm btn-warning">Unfollow</button>
                        </form>
                    }
                    else
                    {
                        <form method="post" action="@Url.Action("Follow", "Discussion", new { id = d.RowKey })">
                            <button class="btn btn-sm btn-success">Follow</button>
                        </form>
                    }

                </div>

            </div>
        </div>
    }
</div>

<script>
    function toggleCommentForm(id) {
        const form = document.getElementById('comment-form-' + id);
        if (form) {
            form.style.display = form.style.display === 'none' ? 'block' : 'none';
        }
    }
</script>

<style>
    .story-container {
        display: flex;
        overflow-x: auto;
        gap: 20px;
        padding: 10px 0;
        scroll-snap-type: x mandatory;
    }

    .story-card {
        flex: 0 0 300px;
        background-color: #f5f5f5;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        scroll-snap-align: start;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .poster-img {
        width: 100%;
        height: auto;
        border-radius: 6px;
        margin-bottom: 10px;
    }

    .story-content {
        text-align: left;
        width: 100%;
    }

        .story-content h3 {
            margin-top: 0;
        }

    .story-actions {
        margin-top: 10px;
        text-align: center;
    }

    .btn {
        text-decoration: none;
        padding: 5px 10px;
        border-radius: 4px;
    }

    .btn-primary {
        background-color: #007bff;
        color: white;
    }

    .btn-danger {
        background-color: #dc3545;
        color: white;
    }

    .reaction-buttons {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        align-items: center;
    }

    .reaction-form {
        margin: 0;
    }

        .reaction-form button {
            width: 80px;
        }
</style>
